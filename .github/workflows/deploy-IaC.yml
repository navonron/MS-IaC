name: Deploy IaC

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  id-token: write
  pull-requests: write

env:
  BACKEND_AZURE_RESOURCE_GROUP_NAME: ${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}
  BACKEND_AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}
  BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}
  BACKEND_AZURE_STORAGE_ACCOUNT_ACCESS_KEY: ${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_ACCESS_KEY }}
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  TF_VAR_subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_USE_MSI: "true"

jobs:
  deploy:
    runs-on: self-hosted
    defaults:
      run:
        working-directory: ./env/dev
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Terraform Fmt
        id: fmt
        run: terraform fmt

      - name: Terraform Init
        id: init
        run: |
          terraform init \
            -backend-config="resource_group_name=${{ secrets.BACKEND_AZURE_RESOURCE_GROUP_NAME }}" \
            -backend-config="storage_account_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_NAME }}" \
            -backend-config="container_name=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_CONTAINER_NAME }}" \
            -backend-config="access_key=${{ secrets.BACKEND_AZURE_STORAGE_ACCOUNT_ACCESS_KEY }}" \
            -backend-config="key=terraform.tfstate"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: |
          export exitcode=0
          terraform plan -no-color -var-file="terraform.tfvars" -out main.tfplan || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          if [ $exitcode -eq 1 ]; then
            echo "Error: Terraform plan failed"
            exit 1
          else
            echo "Terraform plan was successful"
            exit 0
          fi

      - name: Terraform Apply
        run: terraform destroy






