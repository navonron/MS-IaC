name: Deploy App

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
  ARM_USE_MSI: "true"
  ACR_NAME: ${{ secrets.ACR_NAME }}
  AKS_CLUSTER_NAME: ${{ secrets.AKS_CLUSTER_NAME }}
  AKS_RESOURCE_GROUP: ${{ secrets.AKS_RESOURCE_GROUP }}
  IMAGE_NAME: ${{ secrets.IMAGE_NAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}

jobs:
  build:
    name: Build and Deploy Application
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          repository: ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}
          token: ${{ secrets.CHART_REPO_TOKEN }}
          path: ${{ env.IMAGE_NAME }}

      - name: Azure login
        uses: azure/login@v2
        with:
          auth-type: IDENTITY
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}

      - name: Log in to Docker Hub
        run: |
          echo "${{ env.DOCKER_PASSWORD }}" | docker login -u "${{ env.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        working-directory: ./${{ env.IMAGE_NAME }}
        run: |
          docker build -t ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest .

      - name: Push Docker Image to Docker Hub
        working-directory: ./${{ env.IMAGE_NAME }}
        run: |
          docker push ${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

      - name: Deploy to AKS
        working-directory: ./${{ env.IMAGE_NAME }}
        run: |
          az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

#      # Install dependencies and check for vulnerabilities
#      - name: Install Dependencies and Audit
#        working-directory: app/nextjsapp
#        run: |
#          npm install
#          npm audit --production
#
#      # Build the application
#      - name: Build Application
#        working-directory: app/nextjsapp
#        run: npm run build
#
#      # Lint and Test
#      - name: Lint Code
#        working-directory: app/nextjsapp
#        run: npm run lint
#      - name: Run Tests
#        working-directory: app/nextjsapp
#        run: npm test
